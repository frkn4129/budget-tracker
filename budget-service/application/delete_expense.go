package application

import (
	"budget-tracker/domain"
	"errors"
)

var ErrExpenseNotFound = errors.New("expense not found")

type DeleteExpenseCommand struct {
	ExpenseID string
	UserID    string // ğŸ‘ˆ EÄŸer multi-tenant yapÄ±daysan kullanÄ±lÄ±r
}

type DeleteExpenseHandler struct {
	Repo domain.ExpenseRepository
}

func NewDeleteExpenseHandler(repo domain.ExpenseRepository) *DeleteExpenseHandler {
	return &DeleteExpenseHandler{Repo: repo}
}

func (h *DeleteExpenseHandler) Handle(cmd *DeleteExpenseCommand) error {
	// 1. KayÄ±t var mÄ± kontrolÃ¼
	expense, err := h.Repo.GetByID(cmd.ExpenseID)
	if err != nil {
		return err // 500 olarak iÅŸlenebilir
	}
	if expense == nil {
		return ErrExpenseNotFound
	}

	// EÄŸer UserID kontrolÃ¼ yapacaksan:
	if cmd.UserID != "" && cmd.UserID != expense.UserID {
		return ErrExpenseNotFound // aynÄ± hatayÄ± dÃ¶ner, bilgi sÄ±zdÄ±rmaz
	}

	// 2. Silme iÅŸlemi
	return h.Repo.Delete(cmd.ExpenseID)
}
